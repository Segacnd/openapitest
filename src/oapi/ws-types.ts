/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v1/authentication/token/": {
    /**
     * @description Takes a set of user credentials and returns an access and refresh JSON web
     * token pair to prove the authentication of those credentials.
     */
    post: operations["v1_authentication_token_create"];
  };
  "/api/v1/authentication/token/refresh/": {
    /**
     * @description Takes a refresh type JSON web token and returns an access type JSON web
     * token if the refresh token is valid.
     */
    post: operations["v1_authentication_token_refresh_create"];
  };
  "/api/v1/department/": {
    get: operations["v1_department_list"];
    post: operations["v1_department_create"];
  };
  "/api/v1/department/{id}/": {
    get: operations["v1_department_retrieve"];
    put: operations["v1_department_update"];
    delete: operations["v1_department_destroy"];
    patch: operations["v1_department_partial_update"];
  };
  "/api/v1/vacancy/": {
    get: operations["v1_vacancy_list"];
    post: operations["v1_vacancy_create"];
  };
  "/api/v1/vacancy/{id}/": {
    get: operations["v1_vacancy_retrieve"];
    put: operations["v1_vacancy_update"];
    delete: operations["v1_vacancy_destroy"];
    patch: operations["v1_vacancy_partial_update"];
  };
  "/api/v1/vacancy/{id}/restore/": {
    post: operations["v1_vacancy_restore_create"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Department: {
      /** Format: uuid */
      id: string;
      name: string;
      seo_title: string | null;
      seo_description: string | null;
      description?: {
        [key: string]: unknown;
      } | null;
    };
    PaginatedDepartmentList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?p=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?p=2
       */
      previous?: string | null;
      results?: components["schemas"]["Department"][];
    };
    PaginatedVacancyList: {
      /** @example 123 */
      count?: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?p=4
       */
      next?: string | null;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?p=2
       */
      previous?: string | null;
      results?: components["schemas"]["Vacancy"][];
    };
    PatchedDepartment: {
      /** Format: uuid */
      id?: string;
      name?: string;
      seo_title?: string | null;
      seo_description?: string | null;
      description?: {
        [key: string]: unknown;
      } | null;
    };
    PatchedVacancy: {
      /** Format: uuid */
      id?: string;
      title?: string;
      seo_title?: string | null;
      seo_description?: string | null;
      description?: string;
      bonuses?: string[];
      pluses?: string[];
      skills?: string[];
      /** Format: uri */
      link?: string;
      department?: components["schemas"]["Department"];
      /** Format: uuid */
      department_id?: string;
      addition?: string | null;
    };
    TokenObtainPair: {
      username: string;
      password: string;
      access: string;
      refresh: string;
    };
    TokenRefresh: {
      access: string;
      refresh: string;
    };
    Vacancy: {
      /** Format: uuid */
      id: string;
      title: string;
      seo_title: string | null;
      seo_description: string | null;
      description: string;
      bonuses?: string[];
      pluses?: string[];
      skills?: string[];
      /** Format: uri */
      link?: string;
      department: components["schemas"]["Department"];
      /** Format: uuid */
      department_id: string;
      addition?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * @description Takes a set of user credentials and returns an access and refresh JSON web
   * token pair to prove the authentication of those credentials.
   */
  v1_authentication_token_create: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["TokenObtainPair"];
        "multipart/form-data": components["schemas"]["TokenObtainPair"];
        "application/json": components["schemas"]["TokenObtainPair"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["TokenObtainPair"];
        };
      };
    };
  };
  /**
   * @description Takes a refresh type JSON web token and returns an access type JSON web
   * token if the refresh token is valid.
   */
  v1_authentication_token_refresh_create: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["TokenRefresh"];
        "multipart/form-data": components["schemas"]["TokenRefresh"];
        "application/json": components["schemas"]["TokenRefresh"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["TokenRefresh"];
        };
      };
    };
  };
  v1_department_list: {
    parameters: {
      query?: {
        /** @description A page number within the paginated result set. */
        p?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedDepartmentList"];
        };
      };
    };
  };
  v1_department_create: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Department"];
        "multipart/form-data": components["schemas"]["Department"];
        "application/json": components["schemas"]["Department"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Department"];
        };
      };
    };
  };
  v1_department_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this department. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Department"];
        };
      };
    };
  };
  v1_department_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this department. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Department"];
        "multipart/form-data": components["schemas"]["Department"];
        "application/json": components["schemas"]["Department"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Department"];
        };
      };
    };
  };
  v1_department_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this department. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  v1_department_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this department. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["PatchedDepartment"];
        "multipart/form-data": components["schemas"]["PatchedDepartment"];
        "application/json": components["schemas"]["PatchedDepartment"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Department"];
        };
      };
    };
  };
  v1_vacancy_list: {
    parameters: {
      query?: {
        department?: string;
        /** @description A page number within the paginated result set. */
        p?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedVacancyList"];
        };
      };
    };
  };
  v1_vacancy_create: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Vacancy"];
        "multipart/form-data": components["schemas"]["Vacancy"];
        "application/json": components["schemas"]["Vacancy"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Vacancy"];
        };
      };
    };
  };
  v1_vacancy_retrieve: {
    parameters: {
      path: {
        /** @description A UUID string identifying this vacancy. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Vacancy"];
        };
      };
    };
  };
  v1_vacancy_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this vacancy. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Vacancy"];
        "multipart/form-data": components["schemas"]["Vacancy"];
        "application/json": components["schemas"]["Vacancy"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Vacancy"];
        };
      };
    };
  };
  v1_vacancy_destroy: {
    parameters: {
      path: {
        /** @description A UUID string identifying this vacancy. */
        id: string;
      };
    };
    responses: {
      /** @description No response body */
      204: {
        content: never;
      };
    };
  };
  v1_vacancy_partial_update: {
    parameters: {
      path: {
        /** @description A UUID string identifying this vacancy. */
        id: string;
      };
    };
    requestBody?: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["PatchedVacancy"];
        "multipart/form-data": components["schemas"]["PatchedVacancy"];
        "application/json": components["schemas"]["PatchedVacancy"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Vacancy"];
        };
      };
    };
  };
  v1_vacancy_restore_create: {
    parameters: {
      path: {
        /** @description A UUID string identifying this vacancy. */
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Vacancy"];
        "multipart/form-data": components["schemas"]["Vacancy"];
        "application/json": components["schemas"]["Vacancy"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Vacancy"];
        };
      };
    };
  };
}
